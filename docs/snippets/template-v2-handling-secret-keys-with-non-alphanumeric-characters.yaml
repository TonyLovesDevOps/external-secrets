{% raw %}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: template
spec:
  # ...
  target:
    name: secret-to-be-created
    template:
      engineVersion: v2
      data:
        # Note that Go template errors out if the secretKey value contains 'illegal' characters:
        # my-certificate.crt: "{{ .my-certificate-base64-encoded.crt | b64dec }}" # ERROR because key contains '-' and '.' characters
        # my-certificate.crt: "{{ .my-certificate-base64-encoded.crt | b64dec }}" # ERROR because key contains '-' and '.' characters
        # secretKey: "{{ .37signals_certificate_base64_encoded | b64dec }}"       # ERROR because key starts with a number
        # Instead, you can use the 'index' function to work around this -- note the single quotes so that you can use double quotes to
        # pass the key name to the index function with double quotes
        my-certificate.crt: '{{ index . "my-certificate-base64-encoded.crt" | b64dec }}'
        my-private-key.pem: '{{ index . "my-private-key-base64-encoded.pem" | b64dec }}'
        37signals-certificate.crt: '{{ index . "37signals_certificate_base64_encoded" | b64dec }}'
        # You can also use the 'index' function in multiline strings - here we concatenate a CA onto the end of a certificate
        my-certificate-with-root-ca.crt: |-
          {{ index . "my-certificate-base64-encoded.crt" | b64dec }}{{ index . "root-ca-base64-encoded.crt" | b64dec }}
  data:
  - secretKey: my-certificate-base64-encoded.crt
    remoteRef:
      key: my-certificate-base64-encoded.crt
  - secretKey: my-private-key-base64-encoded.pem
    remoteRef:
      key: my-private-key-base64-encoded.pem
  - secretKey: root-ca-base64-encoded.crt
    remoteRef:
      key: root-ca-base64-encoded.crt
  - secretKey: 37signals_certificate_base64_encoded
    remoteRef:
      key: 37signals_certificate_base64_encoded
{% endraw %}
